#!/bin/bash
#author: Jeffrey DeYoung
#to use, add to your shells .zshrc or .bashrc file. Ex: source ~/projects/linux-helpers/gitHelper.bsh

#git adds all files, then commits them;
#the comment for the commit will be the name of the git branch you are currently on
#prepended to the string you pass in as an argument to this function
function gcommit(){
    git add -A
    git commit -m "$(getGitBranch) -- $1"
}

#gets the current git branch you are on
function getGitBranch(){
    git status | sed -n "1p" | awk -F' ' '{ print $3 }'
}

#checks out main, pulls, returns you to your branch, then merges main to your branch
function gitUpdateFromMain(){
    current=$(getGitBranch)
    echo "checking out main from $current"
    git checkout main
    git pull
    echo "checking out $current from main"
    git checkout $current
    git merge main
}

#takes your current branch, merges it to main, then pushes
function gitPushToMain(){
    current=$(getGitBranch)
    echo "checking out main from $current"
    git checkout main
    echo "merging branch $current to main"
    git merge work
    git push
    echo "checking out $current from main"
    git checkout $current
}

#commits all current files with the comment passed in; pushes to remote
function commitAndPushToCurrentBranch(){
    gcommit $1
    git push
}

#checks out main and pulls latest
function getCheckoutMainAndPull(){
	echo "checking out main and pulling"
	git checkout main && git pull
}

#java start new work -- builds, checks out a new branch, pushes to origin, upticks, and does an inital commit
#Note: Requires the javaMinorVersionUptick script to be sourced
function javaStartNewWork(){
	echo "Starting java work on a new branch $1"
	getCheckoutMainAndPull
	#make sure the current main builds so we don't start off on a bad foot with our new branch
	mvn clean install
	if [ $? -eq 0 ]
	then
		echo "Main Build Success! Checking out new branch."
		git checkout -b $1
		git push -u origin $1
		javaMinorVersionUptick
		git commit -a -m "Start of work on $1 -- uptick only."
	else
		echo "Could not build main; please ensure that works prior to starting new work."
	fi
}

#starts a new branch with the passed in name, and pushes it to create it on origin
function startNewWork(){
	echo "Starting work on a new branch $1"
	getCheckoutMainAndPull
	git checkout -b $1
	git push -u origin $1
}

#goes it to all top-level git projects in the current dir and pulls (not changing the currently checked out branch)
function pullAll(){
    echo "Updating all top-level directories."
    for d in ./*/ ; do (cd "$d" && echo "Pulling dir $d" && git pull); done
}

#goes it to all top-level git projects in the current dir, checks out main and pulls (leaving the project on main)
function pullFromMainAll(){
    echo "Updating all top-level directories to main."
    for d in ./*/ ; do (cd "$d" && echo "Pulling dir $d" && getCheckoutMainAndPull); done
}

#git update from main
alias gufm="gitUpdateFromMain"
#git push to main
alias gptm="gitPushToMain"
#git add and commit
alias gac="git add -A; gcommit"
#git add, commit, and push
alias gacp="commitAndPushToCurrentBranch"
#git checkout main and pull
alias gcm="getCheckoutMainAndPull"
#git pull (i'm lazy, ok?)
alias gp="git pull"
#git pull all
alias gpa="pullAll"
#git pull all from main
alias gpam="pullFromMainAll"

#java start new work -- builds, checks out a new branch, pushes to origin, upticks, and does an inital commit -- must pass in a new branch name
alias jsnw="javaStartNewWork"
#start new work -- must pass in a new branch name
alias snw="startNewWork"
